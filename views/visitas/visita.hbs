<div style='padding-top: 10px'></div>
<h1 class='bg-secondary text-center text-white rounded p-2'>
  Visitas Guiadas
  <a href='/visitas/agregar' class='btn btn-success btn-primary border border-light' rel='noopener noreferrer'>
    +
  </a>
  <a href="docs/sections/gestiones/secretaria.html#visitas-guiadas" class="btn btn-info ml-auto" target="_blank">
    Manual
  </a>
</h1>
<table class="table table-striped table-bordered" id='visitas'>
  <thead>
    <th scope='col'>#</th>
    <th scope='col'>Exhibicion</th>
    <th scope='col'>Cliente</th>
    <th scope='col'>Guía</th>
    <th scope='col'>Cantidad de personas</th>
    <th scope='col'>Fecha de visita</th>
    <th scope='col'>Horario</th>
    <th scope='col'>Precio (ARS)</th>
    <th scope='col'>Estado</th>
    <th scope='col'>Observación</th>
    <th class="no-export" data-orderable="false">Acciones</th>
  </thead>
  <tbody>
  </tbody>
</table>

<script>
  $(document).ready(function () {
    $('#visitas').DataTable({
      dom: 'Bfrtip',
      buttons: [
        {
          extend: 'pdf',
          orientation: 'landscape',
          exportOptions: {
            columns: ':not(.no-export)'
          }
        },
        {
          extend: 'excel',
          exportOptions: {
            columns: ':not(.no-export)'
          }
        },
        {
          extend: 'csv',
          exportOptions: {
            columns: ':not(.no-export)'
          }
        }
      ],
      searching: true,
      ordering: true,
      serverSide: true, // Indica que el procesamiento de datos se realiza en el servidor
      order: [[0, 'desc']],
      ajax: {
        url: '/visitas/list', // URL del endpoint que devuelve los datos de visitas
        type: 'GET', // Tipo de petición HTTP
        {{> paginacion / data}}
      },
      columns: [
        { data: 'id' },
        {
          data: 'Exhibicion.nombre',
          render: function (data, type, row) {
            return row.Exhibicion.nombre + ' | ' + row.Exhibicion.tematica;
          }
        },
        {
          data: 'Cliente->Persona.identificacion',
          render: function (data, type, row) {
            return row.Cliente.Persona.identificacion + ' | ' + row.Cliente.Persona.nombre + ' ' + row.Cliente.Persona.apellido;
          }
        },
        {
          data: 'Guium->Persona.identificacion',
          render: function (data, type, row) {
            return row.Guium.Persona.identificacion + ' | ' + row.Guium.Persona.nombre + ' ' + row.Guium.Persona.apellido;
          }
        },
        { data: 'cantidadDePersonas' },
        {
          data: 'fechaVisita',
          render: function (data, type, row) {
            const fecha = new Date(data.split('T')[0] + 'T00:00:00');
            const dia = ('0' + fecha.getDate()).slice(-2);
            const mes = ('0' + (fecha.getMonth() + 1)).slice(-2);
            const año = fecha.getFullYear();
            return dia + '/' + mes + '/' + año;
          }
        },
        { data: 'horario' },
        {
          data: 'precio',
          render: function (data, type, row) {
            return '$' + data;
          }
        },
        {
          data: 'estado',
          render: function (data, type, row) {
            return data ? data : 'Pendiente';
          }
        },
        {
          data: 'observacion',
          render: function (data, type, row) {
            return data ? data : 'Particular';
          }
        },
        {
          data: null,
          render: function (data, type, row) {
            if (row.estado === "Cancelada" || row.estado === "Finalizada") {
              return '';
            }
            return `
              <div class="btn-group">
                <a href="/visitas/editar/${data.id}" class="btn btn-primary mr-2" title="Editar">
                  Editar
                </a>
                <a href="/visitas/cancelar/${data.id}" class="btn btn-danger mr-2" title="Cancelar">
                  Cancelar
                </a>
                <a href="/visitas/finalizar/${data.id}" class="btn btn-success" title="Finalizar">
                  Finalizar
                </a>
              </div>
            `;
          }
        }
      ],
      language: {
        processing: "Buscando...",
        search: "Buscar:",
        lengthMenu: "Mostrando _MENU_",
        info: "Mostrando _START_ de _END_ de un total de _TOTAL_ ",
        infoEmpty: "Mostrando 0 de 0 de un total de 0 ",
        infoFiltered: "(de un total de _MAX_)",
        infoPostFix: "",
        loadingRecords: "Cargando...",
        zeroRecords: "No hay coincidencias.",
        emptyTable: "No hay visitas.",
        paginate: { first: "Primero", previous: "Anterior", next: "Siguiente", last: "Último" },
        aria: { sortAscending: ": Ordenar ascendente", sortDescending: ": Ordenar descendente" }
      },
      columnDefs: [
        { orderable: false, targets: -1 } // La columna -1 es la última columna (Acciones)
      ]
    }); 
  });
</script>

<link rel='stylesheet' type='text/css'
  href='https://cdn.datatables.net/v/bs4/jq-3.3.1/jszip-2.5.0/dt-1.10.21/b-1.6.2/b-flash-1.6.2/b-html5-1.6.2/datatables.min.css' />

<script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js'></script>
<script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js'></script>
<script type='text/javascript'
  src='https://cdn.datatables.net/v/bs4/jq-3.3.1/jszip-2.5.0/dt-1.10.21/b-1.6.2/b-flash-1.6.2/b-html5-1.6.2/datatables.min.js'></script>
