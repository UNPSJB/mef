<div class="text-center">
  <h4 class="pt-2" style="color: #000000; font-weight: bold;">
    <span style="text-decoration: underline;">Dinosaurio #{{dino.id}}:</span> {{dino.nombre}}, {{dino.periodo}},
    {{dino.alimentacion}},
  </h4>
</div>


<!-- Toggle global -->
<input type="checkbox" id="toggleGlobal" onchange="toggleGlobal(this.checked)">
<label for="toggleGlobal">Habilitar/Deshabilitar todos los moldes</label>


{{#each huesosAgrupados }}
<div class="huesos-agrupados">
  <a class="btn btn-secondary btn-block my-2" data-toggle="collapse" href="#{{this.[0].agrupado}}" role="button"
    aria-expanded="false" aria-controls="{{this.[0].agrupado}}">
    {{this.[0].agrupado}}
  </a>
  <div class="collapse show" id="{{this.[0].agrupado}}">
    <div class="card card-body">
      <div class="padding-top:10px">
        <table class="table table-striped">
          <thead>
            <th>#</th>
            <th>Nombre</th>
            <th>Hueso</th>
            <th>Tipo</th>
            <th>Subtipo</th>
            {{#if ../req.taller}}
            <th>Tiene Molde</th>
            {{/if}}
          </thead>
          <tbody>
            {{#each this}}
            <tr>
              <td>{{this.huesos.id}}</td>
              <td>{{this.huesos.nombre}}</td>
              <td>{{this.huesos.nombre}} {{this.huesos.numero}}</td>
              <td>{{this.huesos.tipohueso}}</td>
              <td>{{this.huesos.subtipohueso}}</td>
              <!--Disponible Significa que el hueso Tiene Molde -->
              <td>
                <form action="/dinosaurios/moldes/toggle" method="PATCH">
                  <label class="switch">
                    <!-- Agrega un atributo de datos para identificar el checkbox individual -->
                    <input type="checkbox" data-id="{{this.huesos.id}}" onchange="toggleMolde('{{this.huesos.id}}')"
                      {{#if this.huesos.disponible}}checked{{/if}}>
                    <span class="slider round"></span>
                  </label>
                </form>
              </td>
            </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
{{/each}}

<script>
  function toggleGlobal(checked) {
    // Selecciona todos los checkboxes individuales
    var checkboxes = document.querySelectorAll('input[type="checkbox"][data-id]');

    // Itera sobre los checkboxes y actualiza su estado
    checkboxes.forEach(function (checkbox) {
      checkbox.checked = checked;
      // Llama a la función para manejar el cambio de disponibilidad
      toggleMolde(checkbox.getAttribute('data-id'));
    });
  }

  function toggleDisponible(id) {
    console.log("Toggle Disponible called with ID:", id);
    // Obtén la referencia al checkbox
    var checkbox = document.querySelector(`input[data-id="${id}"]`);

    // Actualiza el valor de 'disponible' directamente en el objeto
    this.huesos.disponible = checkbox.checked;

    // Puedes realizar otras acciones según sea necesario

    console.log("Nuevo valor de Disponible:", this.huesos.disponible);
  }

  function toggleMolde(id) {
    fetch(`/dinosaurios/moldes/toggle?id=${id}`, {
      method: "PATCH",
      credentials: "same-origin",
    })
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        console.log("Toggle Molde response:", data);
        // Puedes realizar acciones adicionales según la respuesta del servidor, si es necesario
      })
      .catch(error => {
        console.error("Toggle Molde error:", error);
      });
  }
</script>


<style>
  /* The switch - the box around the slider */
  .switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
  }

  /* Hide default HTML checkbox */
  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  /* The slider */
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
  }

  input:checked+.slider {
    background-color: #2196F3;
  }

  input:focus+.slider {
    box-shadow: 0 0 1px #2196F3;
  }

  input:checked+.slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
  }

  /* Rounded sliders */
  .slider.round {
    border-radius: 34px;
  }

  .slider.round:before {
    border-radius: 50%;
  }
</style>