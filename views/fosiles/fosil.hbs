<div style="padding-top: 10px"></div>
<h1 class="bg-secondary text-center text-white rounded p-2">
  Fósiles
  <a href="/fosiles/agregar" class="btn btn-success btn-primary border border-light" rel="noopener noreferrer">
    +
  </a>
  <a href="http://localhost:4001/docs/sections/gestiones/coleccion.html#fosiles" class="btn btn-info ml-auto"
    target="_blank">
    Manual
  </a>
</h1>
<table style="table-layout: fixed; word-wrap: break-word;" class="table table-hover table-striped table-bordered"
  id="fosiles">
  <thead>
    <th scope="col">#</th>
    <th scope="col">Código de Colección</th>
    <th scope="col">Dinosaurio</th>
    <th scope="col">Disponible para exhibición</th>
    <th scope="col">Peso</th>
    <th scope="col">Fecha Encontrado - dd/mm/aaaa</th>
    <th scope="col">Hueso Referencia</th>
    <th scope="col">Observaciones</th>
    <th scope="col">Acciones</th>
  </thead>
  <tbody>
  </tbody>
</table>

<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.js"></script>
<script>
  $(document).ready(function () {
    $('#fosiles').DataTable({
      dom: 'Bfrtip',
      serverSide: true,
      ajax: {
        url: '/fosiles/list',
        type: 'GET',
        {{> paginacion / data}}
      },
    columns: [
    { data: 'id' },
    { data: 'numero_coleccion' },
    { data: 'Dinosaurio.nombre' },
    {
      data: 'disponible',
      render: function (data) {
        return data ? 'Sí' : 'No';
      }
    },
    { data: 'peso' },
    {
      data: 'fecha_encontrado',
      render: function (data, type, row) {
        const fecha = new Date(data);
        fecha.setDate(fecha.getDate() + 1); // Agrega un día a la fecha para que coincida con la fecha de la BD.
        const dia = fecha.getDate();
        const mes = fecha.getMonth() + 1;
        const anio = fecha.getFullYear();
        const fechaFormateada = `${dia < 10 ? '0' + dia : dia}/${mes < 10 ? '0' + mes : mes}/${anio}`;
        return fechaFormateada;
      }
    },
    { data: 'huesos' },
    {
      data: 'observacion',
      render: function (data) {
        return data ? data : 'Sin observaciones';
      }
    },
    {
      data: null,
      className: 'no-export', // Agregar clase "no-export" a la columna de acciones
      render: function (data, type, row) {
        return '<a href="/fosiles/editar/' + data.id + '"><span class="material-icons">edit</span></a>';
      }
    }
  ],
    buttons: [
    {
      extend: 'pdfHtml5',
      exportOptions: {
        modifier: {
          page: 'all' // Exportar todos los datos, no solo los de la página actual

        },
        columns: ':not(.no-export)' // Exportar todas las columnas excepto las que tienen la clase "no-export"
      },
      customize: function (doc) {
        // Establecer ancho de columna fijo
        doc.content[1].table.widths = ['auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto'];
        // Ajustar el estilo de los títulos de las columnas
        for (var i = 0; i < doc.content[1].table.body[0].length; i++) {
          doc.content[1].table.body[0][i].alignment = 'center';
        }
      }
    },
    {
      extend: 'excelHtml5',
      exportOptions: {
        modifier: {
          page: 'all' // Exportar todos los datos, no solo los de la página actual
        },
        columns: ':not(.no-export)' // Exportar todas las columnas excepto las que tienen la clase "no-export"
      },
      customize: function (xlsx) {
        // Establecer ancho de columna fijo
        var sheet = xlsx.xl.worksheets['sheet1.xml'];
      }
    },
    {
      extend: 'csv',
      exportOptions: {
        columns: ':not(.no-export)' // Exportar todas las columnas excepto las que tienen la clase "no-export"
      }
    }
  ],
    searching: true,
    ordering: true,
    processing: true,
    language: {
    processing: "Buscando...",
    search: "Buscar:",
    lengthMenu: "Mostrando _MENU_",
    info: "Mostrando _START_ de _END_ de un total de _TOTAL_ ",
    infoEmpty: "Mostrando 0 de 0 de un total de 0 ",
    infoFiltered: "(de un total de _MAX_)",
    infoPostFix: "",
    loadingRecords: "Cargando...",
    zeroRecords: "No hay coincidencias.",
    emptyTable: "No hay fósiles.",
    paginate: {
      first: "Primero",
      previous: "Anterior",
      next: "Siguiente",
      last: "Último"
    },
    aria: {
      sortAscending: ": Ordenar ascendente",
      sortDescending: ": Ordenar descendente"
    }
  },
    columnDefs: [
    { orderable: false, targets: -1 } // La columna -1 es la última columna (Acciones)
  ]
    });
  });
</script>

<link rel="stylesheet" type="text/css"
  href="https://cdn.datatables.net/v/bs4/jq-3.3.1/jszip-2.5.0/dt-1.10.21/b-1.6.2/b-flash-1.6.2/b-html5-1.6.2/datatables.min.css" />

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script type="text/javascript"
  src="https://cdn.datatables.net/v/bs4/jq-3.3.1/jszip-2.5.0/dt-1.10.21/b-1.6.2/b-flash-1.6.2/b-html5-1.6.2/datatables.min.js"></script>