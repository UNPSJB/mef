<h1 class="bg-secondary text-center text-white rounded p-2 mt-2">
  Pedidos
  {{#if req.exhibicion}}
  <a class="btn btn-success btn-primary border border-light" href="/pedidos/agregar" role="button">
    +
  </a>
  {{/if}}
  <a href="/docs/sections/gestiones/exhibicion.html#pedidos" class="btn btn-info ml-auto">
    Manual
  </a>
</h1>

<table class="table" id="pedidos">
  <thead>
    <th>#</th>
    <th>Dinosaurio</th>
    <th>Estado</th>
    <th>Cliente</th>
    <th>Inicio Pedido</th>
    <th>Descripción</th>
    <th scope="col" data-orderable="false">Acciones</th>
  </thead>
  <tbody>
  </tbody>
</table>
<script>
  $(document).ready(function () {
    $('#pedidos').DataTable({
      dom: 'Bfrtip',
      buttons: ['pdf', 'excel', 'csv'],
      searching: true,
      ordering: true,
      serverSide: true,

      ajax: '/pedidos/list',
      columns: [
        { data: 'id' },
        { data: 'Dinosaurio_nombre' },
        { data: 'ultimo_estado' },
        {
          data: null,
          render: function (data, type, row) {
            if (data.Persona_nombre && data.Persona_apellido) {
              return data.Persona_nombre + ' ' + data.Persona_apellido;
            } else {
              return 'Interno';
            }
          }
        },
        {
          data: 'createdAt',
          render: function (data, type, row) {
            const fecha = new Date(data);
            const dia = fecha.getDate();
            const mes = fecha.getMonth() + 1;
            const anio = fecha.getFullYear();
            const fechaFormateada = `${dia < 10 ? '0' + dia : dia}-${mes < 10 ? '0' + mes : mes}-${anio}`;
            return fechaFormateada;
          }
        },
        {
          data: null,
          render: function (data, type, row) {
            if (data.motivo && data.motivo.trim().length > 0) {
              return data.motivo;
            } else {
              return 'Sin descripción';
            }
          }
        },
        {
          data: null,
          render: function (data, type, row) {
            const taller = "{{req.taller}}"
            const exhibicion = "{{req.exhibicion}}"

            const { ultimo_estado, id, PersonaId } = data;

            const detalle = 'Detalle'
            const fabricar = 'Fabricando'
            const empleados = 'Empleados'
            const demorar = 'Demorado'
            const finalizar = 'Finalizado'
            const entregar = 'Entregado'

            const presupuestar = 'Presupuestado'
            const cancelar = 'Cancelado'
            const facturar = 'Facturado'
            const confirmar = 'Confirmado'

            const EXHIBICION_ESTADOS = {
              presupuestar,
              cancelar,
              facturar,
              confirmar,
            }
            const TALLER_ESTADOS = {
              fabricar,
              demorar,
              finalizar,
              entregar,
            }
            let estados = { detalle };

            if (taller) {
              if (ultimo_estado === confirmar) {
                estados = { fabricar, ...estados };
              }
              if (ultimo_estado === fabricar) {
                estados = { finalizar, demorar, empleados, ...estados };
              }
              if (ultimo_estado === demorar) {
                estados = { demorar, ...estados }
              }
              if (ultimo_estado === finalizar) {
                if (!PersonaId) {
                  estados = { entregar, ...estados }
                }
              }
            }
            if (exhibicion) {
              if (ultimo_estado === presupuestar) {
                estados = { facturar, cancelar, ...estados }
              }
              if (ultimo_estado === facturar) {
                estados = { confirmar, ...estados }
              }
            }

            const botones = Object.keys(estados).reduce((acc, estado, index) => {
              const estadoTexto = estados[estado]
              if (estado === 'entregar' && (!data.Persona_nombre && !data.Persona_apellido)) {
                return acc; // No agregar el botón entregar si el cliente es 'Interno'
              }
              acc += `<a class='btn btn-primary' href='/pedidos/${estado}/${id}'>${estadoTexto}</a>`
              return acc
            }, '')
            return botones
          }
        }

      ],
      language: {
        processing: "Buscando...",
        search: "Buscar:",
        lengthMenu: "Mostrando _MENU_",
        info: "Mostrando _START_ de _END_ de un total de _TOTAL_ ",
        infoEmpty: "Mostrando 0 de 0 de un total de 0 ",
        infoFiltered: "(de un total de _MAX_)",
        infoPostFix: "",
        loadingRecords: "Cargando...",
        zeroRecords: "No hay coincidencias.",
        emptyTable: "No hay pedidos.",
        paginate: {
          first: "Primero",
          previous: "Anterior",
          next: "Siguiente",
          last: "Último"
        },
        aria: {
          sortAscending: ": Ordenar ascendente",
          sortDescending: ": Ordenar descendente"
        }
      },
      columnDefs: [
        {
          targets: 'acciones',
          orderable: false,
        },
      ],
    });
  });
</script>

<script>
  const FABRICAR = 'Fabricando'
  const DEMORAR = 'Demorado'
  const FINALIZAR = 'Finalizado'
  const ENTREGAR = 'Entregado'

  const PRESUPUESTAR = 'Presupuestado'
  const CANCELAR = 'Cancelado'
  const FACTURAR = 'Facturado'
  const CONFIRMAR = 'Confirmado'

  const EXHIBICION_ESTADOS = {
    PRESUPUESTAR,
    CANCELAR,
    FACTURAR,
    CONFIRMAR,
  }
  const TALLER_ESTADOS = {
    FABRICAR,
    DEMORAR,
    FINALIZAR,
    ENTREGAR,
  }
  const taller = "{{req.taller}}"
  const exhibicion = "{{req.exhibicion}}"
  if (taller) {
    $(".Presupuestado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>");
    })
    $(".Facturado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Confirmado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) +
        fabricar("fabricar", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Fabricando").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) +
        fabricar("finalizar", $(this).find('.id')[0].innerText) +
        fabricar("demorar", $(this).find('.id')[0].innerText) +
        fabricar("empleados", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Demorado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) +
        fabricar("reanudar", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Finalizado").each(function () {
      let cliente = $(this).find('.cliente')[0].innerText;
      if (cliente === 'Interno') {
        $(this).append("<td>" +
          fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
      } else {
        $(this).append("<td>" +
          fabricar("detalle", $(this).find('.id')[0].innerText) +
          fabricar("entregar", $(this).find('.id')[0].innerText) + "</td>")
      }
    })
    $(".Entregado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Cancelado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
  }


  if (exhibicion) {
    $(".Presupuestado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) +
        fabricar("facturar", $(this).find('.id')[0].innerText) +
        fabricar("cancelar", $(this).find('.id')[0].innerText) + "</td>");
    })
    $(".Facturado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) +
        fabricar("confirmar", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Confirmado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Fabricando").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Demorado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Finalizado").each(function () {
      let cliente = $(this).find('.cliente')[0].innerText;
      if (cliente === 'Interno') {
        $(this).append("<td>" +
          fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
      } else {
        $(this).append("<td>" +
          fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
      }
    })
    $(".Entregado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Cancelado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })

  }
  function fabricar(accion, id) {
    let capitlizado = accion.charAt(0).toUpperCase() + accion.slice(1);
    return `<a id='${accion}' class='btn btn-primary' href='/pedidos/${accion}/${id}'>${capitlizado}</a>`;
  }   
</script>


<link rel="stylesheet" type="text/css"
  href="https://cdn.datatables.net/v/bs4/jq-3.3.1/jszip-2.5.0/dt-1.10.21/b-1.6.2/b-flash-1.6.2/b-html5-1.6.2/datatables.min.css" />

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script type="text/javascript"
  src="https://cdn.datatables.net/v/bs4/jq-3.3.1/jszip-2.5.0/dt-1.10.21/b-1.6.2/b-flash-1.6.2/b-html5-1.6.2/datatables.min.js"></script>