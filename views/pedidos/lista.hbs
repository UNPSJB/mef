<h1 class="bg-secondary text-center text-white rounded p-2 mt-2">
  Pedidos
  {{#if req.exhibicion}}
  <a class="btn btn-success btn-primary border border-light" href="/pedidos/agregar" role="button">
    +
  </a>
  {{/if}}
  <a href="http://localhost:4001/docs/sections/gestiones/exhibicion.html#pedidos" class="btn btn-info ml-auto">
    Manual
  </a>
</h1>

<table class="table" id="pedidos">
  <thead>
    <th>#</th>
    <th>Dinosaurio</th>
    <th>Estado</th>
    <th>Cliente</th>
    <th>Inicio Pedido</th>
    <th>Descripción</th>
    <th scope="col" data-orderable="false">Acciones</th>
  </thead>
  <tbody>
    {{#each pedidos}}
    <tr class="{{this.estadoInstance}} {{req.exhibicion}} {{req.taller}}">
      <td class="id">{{this.id}}</td>
      <td>
        {{#if this.detallesPedido.length}} <!-- Verificar si hay detalles -->
        {{this.detallesPedido.[0].nombreDinosaurio}} <!-- Mostrar el nombre del primer dinosaurio en detalles -->
        {{else}}
        <i>No hay Dino</i> <!-- Mostrar el mensaje si no hay detalles -->
        {{/if}}
      </td>
      <td>{{this.estadoInstance}}</td>
      <td class="cliente">
        {{#with this.Persona as |Cliente|}}
        {{Cliente.nombre}} {{Cliente.apellido}}
        {{else}}
        <i>Interno</i>
        {{/with}}
      </td>
      <td class="shortDateFormat">
        {{this.createdAt}}
      </td>
      <td>
        {{#with this.motivo}}
        {{this}}
        {{else}}
        <i>No hay Descripción</i>
        {{/with}}
      </td>
    </tr>
    {{/each}}
  </tbody>
</table>
<script>
  $(document).ready(function () {
    $('#pedidos').DataTable({
      dom: 'Bfrtip',
      buttons: ['pdf', 'excel', 'csv'],
      searching: true,
      ordering: true,
      order: [[3, 'desc']],
      language: {
        processing: "Buscando...",
        search: "Buscar:",
        lengthMenu: "Mostrando _MENU_",
        info: "Mostrando _START_ de _END_ de un total de _TOTAL_ ",
        infoEmpty: "Mostrando 0 de 0 de un total de 0 ",
        infoFiltered: "(de un total de _MAX_)",
        infoPostFix: "",
        loadingRecords: "Cargando...",
        zeroRecords: "No hay coincidencias.",
        emptyTable: "No hay pedidos.",
        paginate: {
          first: "Primero",
          previous: "Anterior",
          next: "Siguiente",
          last: "Último"
        },
        aria: {
          sortAscending: ": Ordenar ascendente",
          sortDescending: ": Ordenar descendente"
        }
      },
      columnDefs: [
        {
          targets: 'acciones',
          orderable: false,
        },
      ],
    });
  });
</script>


<script>
  const FABRICAR = 'Fabricando'
  const DEMORAR = 'Demorado'
  const FINALIZAR = 'Finalizado'
  const ENTREGAR = 'Entregado'

  const PRESUPUESTAR = 'Presupuestado'
  const CANCELAR = 'Cancelado'
  const FACTURAR = 'Facturado'
  const CONFIRMAR = 'Confirmado'

  const EXHIBICION_ESTADOS = {
    PRESUPUESTAR,
    CANCELAR,
    FACTURAR,
    CONFIRMAR,
  }
  const TALLER_ESTADOS = {
    FABRICAR,
    DEMORAR,
    FINALIZAR,
    ENTREGAR,
  }
  const taller = "{{req.taller}}"
  const exhibicion = "{{req.exhibicion}}"
  if (taller) {
    $(".Presupuestado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>");
    })
    $(".Facturado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Confirmado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) +
        fabricar("fabricar", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Fabricando").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) +
        fabricar("finalizar", $(this).find('.id')[0].innerText) +
        fabricar("demorar", $(this).find('.id')[0].innerText) +
        fabricar("empleados", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Demorado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) +
        fabricar("reanudar", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Finalizado").each(function () {
      let cliente = $(this).find('.cliente')[0].innerText;
      if (cliente === 'Interno') {
        $(this).append("<td>" +
          fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
      } else {
        $(this).append("<td>" +
          fabricar("detalle", $(this).find('.id')[0].innerText) +
          fabricar("entregar", $(this).find('.id')[0].innerText) + "</td>")
      }
    })
    $(".Entregado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Cancelado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
  }


  if (exhibicion) {
    $(".Presupuestado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) +
        fabricar("facturar", $(this).find('.id')[0].innerText) +
        fabricar("cancelar", $(this).find('.id')[0].innerText) + "</td>");
    })
    $(".Facturado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) +
        fabricar("confirmar", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Confirmado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Fabricando").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Demorado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Finalizado").each(function () {
      let cliente = $(this).find('.cliente')[0].innerText;
      if (cliente === 'Interno') {
        $(this).append("<td>" +
          fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
      } else {
        $(this).append("<td>" +
          fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
      }
    })
    $(".Entregado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })
    $(".Cancelado").each(function () {
      $(this).append("<td>" +
        fabricar("detalle", $(this).find('.id')[0].innerText) + "</td>")
    })

  }


  function fabricar(accion, id) {
    let capitlizado = accion.charAt(0).toUpperCase() + accion.slice(1);
    return `<a id='${accion}' class='btn btn-primary' href='/pedidos/${accion}/${id}'>${capitlizado}</a>`;
  }
  // Actualizar la columna con el estado del pedido
  const rows = document.querySelectorAll('#pedidos tbody tr');
  rows.forEach(function (row) {
    const estado = row.querySelector('td:nth-child(3)').textContent.trim(); // Obtener el estado del pedido
    const fechaInicioText = row.querySelector('.shortDateFormat').textContent.trim(); // Obtener la fecha de inicio del pedido
    if (estado === 'Finalizado') {
      row.querySelector('.shortDateFormat').textContent = 'Pedido finalizado';
    } else {
      const fechaSinHora = fechaInicioText.replace(/T.*/, ''); // Eliminar la "T" y todo lo que viene después
      const fechaInicio = new Date(fechaSinHora); // Convertir la fecha sin hora a objeto Date
      const fechaActual = new Date(); // Obtener la fecha actual
      const mesesTranscurridos = calcularMesesTranscurridos(fechaInicio, fechaActual);
      row.querySelector('.shortDateFormat').textContent = `Han pasado ${mesesTranscurridos} meses`;
    }
  });

  function calcularMesesTranscurridos(fechaInicio, fechaActual) {
    const añoInicio = fechaInicio.getFullYear();
    const mesInicio = fechaInicio.getMonth();
    const añoActual = fechaActual.getFullYear();
    const mesActual = fechaActual.getMonth();

    let diferenciaMeses = (añoActual - añoInicio) * 12 + (mesActual - mesInicio);

    // Manejar caso donde la fecha actual es antes que la fecha de inicio
    if (diferenciaMeses < 0) {
      diferenciaMeses = 0;
    }

    return diferenciaMeses;
  }
</script>



<link rel="stylesheet" type="text/css"
  href="https://cdn.datatables.net/v/bs4/jq-3.3.1/jszip-2.5.0/dt-1.10.21/b-1.6.2/b-flash-1.6.2/b-html5-1.6.2/datatables.min.css" />

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script type="text/javascript"
  src="https://cdn.datatables.net/v/bs4/jq-3.3.1/jszip-2.5.0/dt-1.10.21/b-1.6.2/b-flash-1.6.2/b-html5-1.6.2/datatables.min.js"></script>